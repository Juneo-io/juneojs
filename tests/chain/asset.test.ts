import { AssetValue } from "../../src"

describe('Chain AssetValue', (): void => {
    test('Readable value rounded', (): void => {
        let value: AssetValue = new AssetValue(BigInt(1_000_000_000), 9)
        expect(value.getReadableValueRounded(2)).toBe('1.00')
        expect(value.getReadableValueRounded(0)).toBe('1')
        expect(value.getReadableValueRounded(-1)).toBe('1')
        expect(value.getReadableValueRounded(1)).toBe('1.0')
        expect(value.getReadableValueRounded(9)).toBe('1.000000000')
        expect(value.getReadableValueRounded(10)).toBe('1.000000000')
        value = new AssetValue(BigInt(1_000), 0)
        expect(value.getReadableValueRounded(0)).toBe('1000')
        expect(value.getReadableValueRounded(-1)).toBe('1000')
        expect(value.getReadableValueRounded(1)).toBe('1000')
        expect(value.getReadableValueRounded(5)).toBe('1000')
        value = new AssetValue(BigInt(1_000), -1)
        expect(value.getReadableValueRounded(0)).toBe('1000')
        expect(value.getReadableValueRounded(-1)).toBe('1000')
        expect(value.getReadableValueRounded(1)).toBe('1000')
        expect(value.getReadableValueRounded(5)).toBe('1000')
    })
    
    test('Readable value padded', (): void => {
        let value: AssetValue = new AssetValue(BigInt(1_000_000_000), 9)
        expect(value.getReadableValuePadded()).toBe('1.000000000')
        value = new AssetValue(BigInt(1_000), 0)
        expect(value.getReadableValuePadded()).toBe('1000')
        value = new AssetValue(BigInt(1_000), 3)
        expect(value.getReadableValuePadded()).toBe('1.000')
        value = new AssetValue(BigInt(1), 3)
        expect(value.getReadableValuePadded()).toBe('0.001')
        value = new AssetValue(BigInt(1), 0)
        expect(value.getReadableValuePadded()).toBe('1')
        value = new AssetValue(BigInt(0), 0)
        expect(value.getReadableValuePadded()).toBe('0')
        value = new AssetValue(BigInt(0), 3)
        expect(value.getReadableValuePadded()).toBe('0.000')
    })

    test('Readable value', (): void => {
        let value: AssetValue = new AssetValue(BigInt(1_000_000_000), 9)
        expect(value.getReadableValue()).toBe('1')
        value = new AssetValue(BigInt(1_000), 0)
        expect(value.getReadableValue()).toBe('1000')
        value = new AssetValue(BigInt(1_000), -1)
        expect(value.getReadableValue()).toBe('1000')
        value = new AssetValue(BigInt(0), 0)
        expect(value.getReadableValue()).toBe('0')
        value = new AssetValue(BigInt(0), 3)
        expect(value.getReadableValue()).toBe('0')
    })
})
